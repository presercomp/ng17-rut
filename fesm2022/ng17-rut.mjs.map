{"version":3,"file":"ng17-rut.mjs","sources":["../../../projects/ng17-rut/src/lib/rut.helpers.ts","../../../projects/ng17-rut/src/lib/rut.pipe.ts","../../../projects/ng17-rut/src/lib/rut.directive.ts","../../../projects/ng17-rut/src/lib/rut.validator.ts","../../../projects/ng17-rut/src/lib/rut-value-accessor.ts","../../../projects/ng17-rut/src/lib/ng17-rut.module.ts","../../../projects/ng17-rut/src/public-api.ts","../../../projects/ng17-rut/src/ng17-rut.ts"],"sourcesContent":["export function rutClean(value: string) {\n    if (typeof value === 'string') {\n      return value\n        .replace(/[^0-9kK]+/g, '')\n        .replace(/^0+/, '')\n        .toUpperCase();\n    }\n    return '';\n  }\n  \n  export function rutValidate(value: string) {\n    if (typeof value !== 'string') {\n      return false;\n    }\n  \n    if (/[A-Za-z]/g.test(value.replace(/[kK]/g, ''))) {\n      return false\n    }\n  \n    const rut: string = rutClean(value);\n    let rutDigits: number = parseInt(rut.slice(0, -1), 10);\n    let m: number = 0;\n    let s: number = 1;\n  \n    while (rutDigits > 0) {\n      s = (s + rutDigits % 10 * (9 - m++ % 6)) % 11;\n      rutDigits = Math.floor(rutDigits / 10);\n    }\n    const checkDigit: string = (s > 0) ? String((s - 1)) : 'K';\n  \n    return (checkDigit === rut.slice(-1));\n  }\n  \n  export function rutFormat(value: string) {\n    const rut: string = rutClean(value);\n  \n    if (rut.length <= 1) {\n      return rut;\n    }\n  \n    let result: string = `${rut.slice(-4, -1)}-${rut.substr(rut.length - 1)}`;\n    for (let i: number = 4; i < rut.length; i += 3) {\n      result = `${rut.slice(-3 - i, -i)}.${result}`;\n    }\n  \n    return result;\n  }\n  ","import { Pipe, PipeTransform } from '@angular/core';\nimport { rutFormat } from './rut.helpers';\n\n@Pipe({\n  name: 'rut',\n})\nexport class RutPipe implements PipeTransform {\n  public transform(value: string): string {\n    return rutFormat(value);\n  }\n}\n","import {Directive, HostListener, ElementRef, EventEmitter, Output} from '@angular/core';\nimport * as rutHelpers from './rut.helpers';\n\n@Directive({\n  selector: '[formatRut]',\n  host: {\n    '(blur)': 'onBlur($event)',\n    '(focus)': 'onFocus($event)',\n    '(input)': 'onChange($event)',\n  },\n})\nexport class RutDirective {\n  @Output() public rutChange: EventEmitter<any>;\n\n  allowedKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"k\", \"K\", \"-\", \"Backspace\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"];\n\n  constructor() {\n    this.rutChange = new EventEmitter();\n  }\n\n  public onFocus(ev: Event) {\n    let htmlInputElement: HTMLInputElement = <HTMLInputElement> ev.target;\n    htmlInputElement.value = rutHelpers.rutClean(htmlInputElement.value);\n  }\n\n  public onBlur(ev: Event) {\n    let htmlInputElement: HTMLInputElement = <HTMLInputElement> ev.target;\n    htmlInputElement.value = rutHelpers.rutFormat(htmlInputElement.value) || '';\n  }\n\n  public onChange(ev: Event) {\n    let htmlInputElement: HTMLInputElement = <HTMLInputElement> ev.target;\n    this.rutChange.emit(rutHelpers.rutClean(htmlInputElement.value));\n  }\n\n  @HostListener(\"keydown\", [\"$event\"])\n  public onKeyDown(event: KeyboardEvent){\n    return this.allowedKeys.includes(event.key);\n  }\n}","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, FormControl } from '@angular/forms';\nimport { rutValidate } from './rut.helpers';\n\nexport function validateRutFactory(rutValidate: Function) {\n  return (c: FormControl) => {\n    return rutValidate(c.value) ? null : { invalidRut: true };\n  };\n}\n\n@Directive({\n  selector: '[validateRut][ngModel],[validateRut][formControl]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => RutValidator), multi: true },\n  ],\n})\nexport class RutValidator {\n  private validator: Function;\n\n  constructor() {\n    this.validator = validateRutFactory(rutValidate);\n  }\n\n  public validate(c: FormControl) {\n    return this.validator(c);\n  }\n}\n","import { Directive, Renderer2, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { rutFormat } from './rut.helpers';\n\nimport { ElementRef } from '@angular/core';\n\nconst RUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RutValueAccessor),\n  multi: true,\n};\n\n@Directive({\n  selector: 'input[formatRut]',\n  host: {\n    '(rutChange)': 'onChange($event)',\n    '(blur)': 'onTouched($event)',\n  },\n  providers: [RUT_VALUE_ACCESSOR],\n})\nexport class RutValueAccessor implements ControlValueAccessor {\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    ) { }\n\n  public onChange: any = () => { /*Empty*/ };\n  public onTouched: any = () => { /*Empty*/ };\n\n  public writeValue(value: any): void {\n    let normalizedValue: string = rutFormat(value) || '';\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n  }\n\n  public registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n  public registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { RutPipe } from './rut.pipe';\nimport { RutValidator } from './rut.validator';\nimport { RutDirective } from './rut.directive';\nimport { RutValueAccessor } from './rut-value-accessor';\n\n\nexport { RutPipe } from './rut.pipe';\nexport { RutValidator } from './rut.validator';\nexport { RutDirective } from './rut.directive';\n\n@NgModule({\n  imports: [\n    FormsModule,\n  ],\n  declarations: [\n    RutPipe,\n    RutDirective,\n    RutValidator,\n    RutValueAccessor\n  ],\n  providers: [\n    RutValidator,\n  ],\n  exports: [\n    RutPipe,\n    RutDirective,\n    RutValidator,\n    RutValueAccessor,\n  ],\n})\nexport class Ng17RutModule { }\n","/*\n * Public API Surface of ng17-rut\n */\n\nexport * from './lib/rut.pipe';\nexport * from './lib/rut.directive';\nexport * from './lib/rut.validator';\nexport * from './lib/rut-value-accessor';\nexport * from './lib/ng17-rut.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["rutHelpers.rutClean","rutHelpers.rutFormat"],"mappings":"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"}